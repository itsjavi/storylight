name: Update dependencies

env:
  NODE_VERSION: '>=18.5.0'
  PNPM_VERSION: 8.6

on:
  schedule:
    - cron: 0 16 * * * # every day at 16pm
  workflow_dispatch:

concurrency:
  group: updateDependencies-${{ github.ref }}
  cancel-in-progress: true

jobs:
  updateDependencies:
    name: 'Update dependencies'
    runs-on: ubuntu-latest
    outputs:
      pending_git_changes: ${{ steps.compare_changes.outputs.pending_git_changes }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history so that git diff can compare against HEAD~1

      - name: 'Setup project'
        uses: ./.github/actions/setup-project

      - name: 'Update all dependencies'
        run: pnpm -r update --latest

      - name: 'Check code quality'
        uses: ./.github/actions/check-quality

      - name: Compare Changes
        id: compare_changes
        run: |
          git status
          changes=$(git diff --name-only HEAD~0)
          echo "Changed Files: $changes"
          if [[ -n "$changes" ]]; then
            echo "pending_git_changes=yes" >> "$GITHUB_OUTPUT"
          else
            echo "pending_git_changes=" >> "$GITHUB_OUTPUT"
          fi

  createPullRequest:
    name: 'Create Pull Request'
    runs-on: ubuntu-latest
    needs: [updateDependencies]
    if: ${{ needs.updateDependencies.outputs.pending_git_changes != '' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Check for existing PR
        id: check_open_pr
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          pr_number=$(gh pr list --state open --label "update-deps" --json number --jq '.[0].number')
          echo "pr_number=${pr_number:-0}" >> "$GITHUB_OUTPUT"

      - name: Create PR if not exists
        id: create_pr
        if: ${{ steps.check_open_pr.outputs.pr_number == 0 }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Prepare git
          git config --global user.email "noreply@github.com"
          git config --global user.name "Github Actions"
          git branch -u origin/main main
          # Create branch, commit and PR
          branch_name="update-deps/$(date +'%Y%m%d-%H%M%S')"
          git checkout -b $branch_name
          git add -A
          git commit -m "chore: update dependencies"
          git push origin $branch_name
          gh pr create --title "chore: update dependencies ðŸª„" --base main --head $branch_name --label "update-deps"
